# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_loaders.ipynb.

# %% auto 0
__all__ = ['element_tree_to_data', 'xml_to_data', 'xml_file_to_data', 'dict_to_data', 'json_to_data']

# %% ../nbs/01_loaders.ipynb 4
from .core import Data
from json import loads
from xml.etree import ElementTree

# %% ../nbs/01_loaders.ipynb 6
def element_tree_to_data(obj: ElementTree) -> Data:
    """Takes an ElementTree, and loads it into a Data instance"""
    attributes = obj.attrib.copy()
    data = Data(obj.tag, attributes)
    children = [element_tree_to_data(c) for c in obj]
    for c in children:
        data.add_child(c)
    return data

# %% ../nbs/01_loaders.ipynb 9
def xml_to_data(xml: str) -> Data:
    """Takes a xml string, and loads it into a Data instance"""
    obj: ElementTree = ElementTree.fromstring(xml)
    return element_tree_to_data(obj)

# %% ../nbs/01_loaders.ipynb 11
def xml_file_to_data(path: str) -> Data:
    with open(path, 'r') as h:
        return xml_to_data(h.read())

# %% ../nbs/01_loaders.ipynb 15
def dict_to_data(arg: dict) -> Data:
    """Takes a dict, and loads it into a Data instance"""
    name = arg['name']
    del arg['name']
    
    children = arg.get('children', [])
    if children:
        del arg['children']
    
    data = Data(name, arg)
    for c in children:
        data.add_child(dict_to_data(c))
    return data

# %% ../nbs/01_loaders.ipynb 20
def json_to_data(arg:str) -> Data:
    """Takes a json string, and loads it into a Data instance"""
    j = loads(arg)
    return dict_to_data(j)
