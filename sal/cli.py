# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_cli.ipynb.

# %% auto 0
__all__ = ['main', 'render']

# %% ../nbs/03_cli.ipynb 3
import click
from pathlib import Path
from .core import Data
from .utils import is_notebook
from .loaders import xml_file_to_data
from .templates import MissingTemplate

from sal.templates import (
    InMemoryTemplateLoader,
    TemplateRenderer,
)
from .codegen import Sal, Renderer

from typing import Any

# %% ../nbs/03_cli.ipynb 6
def _render(file: str, directory: str) -> str | Any:
    try:
        repository = InMemoryTemplateLoader.from_directory(directory)
        renderer = Renderer(repository=repository, renderer=TemplateRenderer())
        sal = Sal(renderer)
        struct: Data = xml_file_to_data(file)
        return sal.process(struct)
    except MissingTemplate as e:
        path = Path(directory) / f"{e.name}.jinja2"
        path.write_text(Renderer.DEFAULT_TEMPLATE)
        return render(file, directory)

# %% ../nbs/03_cli.ipynb 9
@click.group()
def main() -> None:
    pass

# %% ../nbs/03_cli.ipynb 10
# TODO : init command
# - create : sal.xml file
# - create : sal folder
# - create : sal/templates folder


@main.command()
@click.option("--filename", type=click.Path(exists=True), default="./sal.xml")
@click.option("--folder", type=click.Path(exists=True), default="./sal")
def render(filename: str, folder: str) -> None:
    click.echo(f"⚠️ {filename=}")
    click.echo(f"⚠️ {folder=}")
    _render(filename, str(Path(folder) / "templates"))

# %% ../nbs/03_cli.ipynb 12
if __name__ == "__main__" and not is_notebook():
    main()
